<?php

/**
 * @file
 * Views year filter module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;
use Symfony\Component\HttpFoundation\Request;
/**
 * Implements hook_help().
 */
function views_year_filter_help($route_name, RouteMatchInterface $route_match) {
  if ($route_name == 'help.page.views_year_filter') {
    $output = '';
    $output .= '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('This module add the possibility to expose date/date time filter with year (format CCYY) instead of using full date (format CCYY-MM-DD HH:MM:SS) or offset from the current time.') . '</p>';
    return $output;
  }
}

/**
 * Implements hook_preprocess_node().
 * Filter years from all the cases
 */

function views_year_filter_preprocess_node(array &$variables) {
  $current_path = \Drupal::service('path.current')->getPath();
  $current_path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path); 
  if ($current_path_alias == '/cases' && $variables['node']->getType() === 'page') {
    $nids = \Drupal::entityQuery('node')
      ->condition('type', 'case')
      ->accessCheck(TRUE)
      ->execute();
    $nodes = Node::loadMultiple($nids);
    $years = [];
    foreach ($nodes as $node) {
      if ($node->hasField('field_date_request_received') && !$node->get('field_date_request_received')->isEmpty()) {
        $date_value = $node->get('field_date_request_received')->value;
        $date = new \DateTime($date_value);
        $years[] = $date->format('Y');
      }
    }
    $unique_years = array_unique($years);
    sort($unique_years);
    $variables['#attached']['drupalSettings']['views_year_filter'] = [
      'uniqueYears' => $unique_years,
    ];

  }
}